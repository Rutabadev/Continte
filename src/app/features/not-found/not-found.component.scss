@import 'src/theme.scss';

.glitch {
   position: relative;
   display: inline-block;
}

// Use mat-color to extract individual colors from a palette as necessary.
.glitch::before {
  /* ... anything needed to make it identical */
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  clip: rect(44px, 450px, 56px, 0);
  /*
    Essentially a box from 0, 44px
    to 450px, 56px
  */

  /* variation */
  left: 2px;
  text-shadow: -1px 0 red;
  
  /* important: opaque background masks the original */
  background: #fff;
  animation: glitch-anim-1 2s infinite linear alternate-reverse;
}
.glitch::after {
  /* ... anything needed to make it identical */
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  /* variation */
  left: -2px;
  text-shadow: -1px 0 blue;
  
  /* important: opaque background masks the original */
  background: #fff;
  animation: glitch-anim-2 2s infinite linear alternate-reverse;
}

.dark > .glitch::before,
.dark > .glitch::after {
  background: #333;
}

$steps: 20;
@keyframes glitch-anim-1 {
   @for $i from 0 through $steps {
      #{percentage($i*(1/$steps))} {
         clip: rect(random(100)+px, 999px, random(100)+px, 0);
      }
   }
}

@keyframes glitch-anim-2 {
   @for $i from 0 through $steps {
      #{percentage($i*(1/$steps))} {
         clip: rect(random(100)+px, 999px, random(100)+px, 0);
      }
   }
}
